import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { ToastsManager } from 'ng2-toastr';
import { CommonDocRoutingService } from '../../services/cdoc-routing.service';
import { Layout } from '../../../angular-commons/services/layout.service';
import { GenericAppService } from '@dps/mycms-commons/dist/commons/services/generic-app.service';
import { CommonRoutingService } from '../../../angular-commons/services/common-routing.service';
import { PageUtils } from '../../../angular-commons/services/page.utils';
import { CommonDocSearchForm } from '@dps/mycms-commons/dist/search-commons/model/forms/cdoc-searchform';
import { CommonDocDataService } from '@dps/mycms-commons/dist/search-commons/services/cdoc-data.service';
import { CommonDocRecord } from '@dps/mycms-commons/dist/search-commons/model/records/cdoc-entity-record';
import { CommonDocSearchResult } from '@dps/mycms-commons/dist/search-commons/model/container/cdoc-searchresult';
import { GenericSearchFormSearchFormConverter } from '@dps/mycms-commons/dist/search-commons/services/generic-searchform.converter';
import { AbstractInlineComponent } from '../../../angular-commons/components/inline.component';
import { Subscription } from 'rxjs/Subscription';
export declare class CommonDocInlineSearchpageComponent<R extends CommonDocRecord, F extends CommonDocSearchForm, S extends CommonDocSearchResult<R, F>, D extends CommonDocDataService<R, F, S>> extends AbstractInlineComponent implements OnInit, OnDestroy {
    protected appService: GenericAppService;
    protected commonRoutingService: CommonRoutingService;
    protected cdocDataService: D;
    protected searchFormConverter: GenericSearchFormSearchFormConverter<F>;
    protected cdocRoutingService: CommonDocRoutingService;
    protected toastr: ToastsManager;
    protected cd: ChangeDetectorRef;
    protected elRef: ElementRef;
    protected pageUtils: PageUtils;
    protected initialized: boolean;
    protected appStateSubscription: Subscription;
    showLoadingSpinner: boolean;
    Layout: typeof Layout;
    searchResult: S;
    searchForm: F;
    params: {};
    showForm: boolean;
    showTimetable?: boolean;
    showLayout?: boolean;
    showResultList?: boolean;
    loadFacets?: boolean;
    loadTrack?: boolean;
    showOnlyIfRecordsFound: boolean;
    label: string;
    baseSearchUrl?: string;
    searchLinkLabel?: string;
    htmlId?: string;
    layout: Layout;
    short?: boolean;
    perPageOnToSearchPage?: number;
    show: EventEmitter<R>;
    searchResultFound: EventEmitter<S>;
    constructor(appService: GenericAppService, commonRoutingService: CommonRoutingService, cdocDataService: D, searchFormConverter: GenericSearchFormSearchFormConverter<F>, cdocRoutingService: CommonDocRoutingService, toastr: ToastsManager, vcr: ViewContainerRef, cd: ChangeDetectorRef, elRef: ElementRef, pageUtils: PageUtils);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onShowDoc(cdoc: R): boolean;
    onPageChange(page: number): boolean;
    onPerPageChange(perPage: number): boolean;
    onSortChange(sort: string): boolean;
    onLayoutChange(layout: Layout): boolean;
    onSearchDoc(cdocSearchForm: F): boolean;
    getToSearchUrl(): string;
    onToSearchPage(event: any): boolean;
    protected updateData(): void;
    protected doSearchWithParams(params: any): void;
    protected doSearch(): void;
}
