import { ChangeDetectorRef } from '@angular/core';
import { ActivatedRoute, ParamMap, Router } from '@angular/router';
import { ToastrService } from 'ngx-toastr';
import { CommonDocRoutingService } from '../services/cdoc-routing.service';
import { Layout, LayoutService } from '../../angular-commons/services/layout.service';
import { PDocRecord } from '@dps/mycms-commons/dist/pdoc-commons/model/records/pdoc-record';
import { ResolvedData } from '../../angular-commons/resolver/resolver.utils';
import { ErrorResolver } from '../resolver/error.resolver';
import { IdValidationRule, KeywordValidationRule } from '@dps/mycms-commons/dist/search-commons/model/forms/generic-validator.util';
import { GenericAppService } from '@dps/mycms-commons/dist/commons/services/generic-app.service';
import { PageUtils } from '../../angular-commons/services/page.utils';
import { AngularMarkdownService } from '../../angular-commons/services/angular-markdown.service';
import { AngularHtmlService } from '../../angular-commons/services/angular-html.service';
import { CommonRoutingService } from '../../angular-commons/services/common-routing.service';
import { GenericTrackingService } from '../../angular-commons/services/generic-tracking.service';
import { PlatformService } from '../../angular-commons/services/platform.service';
import { CommonDocSearchForm } from '@dps/mycms-commons/dist/search-commons/model/forms/cdoc-searchform';
import { CommonDocSearchResult } from '@dps/mycms-commons/dist/search-commons/model/container/cdoc-searchresult';
import { CommonDocDataService } from '@dps/mycms-commons/dist/search-commons/services/cdoc-data.service';
import { CommonDocRecord } from '@dps/mycms-commons/dist/search-commons/model/records/cdoc-entity-record';
import { CommonDocContentUtils } from '../services/cdoc-contentutils.service';
import { AbstractPageComponent, CommonPageComponentComponentConfig } from '../../angular-commons/components/abstract-page.component';
import { CommonEnvironment } from '../../frontend-section-commons/common-environment';
import { ActionTagEvent } from './cdoc-actiontags/cdoc-actiontags.component';
export interface CommonDocShowpageComponentConfig extends CommonPageComponentComponentConfig {
}
export declare abstract class CommonDocShowpageComponent<R extends CommonDocRecord, F extends CommonDocSearchForm, S extends CommonDocSearchResult<R, F>, D extends CommonDocDataService<R, F, S>> extends AbstractPageComponent {
    protected route: ActivatedRoute;
    protected cdocRoutingService: CommonDocRoutingService;
    protected toastr: ToastrService;
    protected errorResolver: ErrorResolver;
    protected pageUtils: PageUtils;
    protected commonRoutingService: CommonRoutingService;
    protected angularMarkdownService: AngularMarkdownService;
    protected angularHtmlService: AngularHtmlService;
    protected cd: ChangeDetectorRef;
    protected trackingProvider: GenericTrackingService;
    protected appService: GenericAppService;
    protected platformService: PlatformService;
    protected layoutService: LayoutService;
    protected environment: CommonEnvironment;
    protected router: Router;
    protected flgDescRendered: boolean;
    idValidationRule: IdValidationRule;
    keywordsValidationRule: KeywordValidationRule;
    contentUtils: CommonDocContentUtils;
    record: R;
    Layout: typeof Layout;
    pdoc: PDocRecord;
    queryParamMap: ParamMap;
    modal: boolean;
    descSelector: string;
    constructor(route: ActivatedRoute, cdocRoutingService: CommonDocRoutingService, toastr: ToastrService, contentUtils: CommonDocContentUtils, errorResolver: ErrorResolver, pageUtils: PageUtils, commonRoutingService: CommonRoutingService, angularMarkdownService: AngularMarkdownService, angularHtmlService: AngularHtmlService, cd: ChangeDetectorRef, trackingProvider: GenericTrackingService, appService: GenericAppService, platformService: PlatformService, layoutService: LayoutService, environment: CommonEnvironment, router: Router);
    protected configureProcessing(): void;
    renderDesc(): string;
    setDesc(descSelector: string, html: string): boolean;
    submitBackToSearch(): boolean;
    submitToLastSearchPredecessor(): boolean;
    submitToLastSearchSuccessor(): boolean;
    submitCloseModal(): boolean;
    protected closeModal(): void;
    getBackToSearchUrl(): string;
    getLastSearchSuccessorUrl(): string;
    getLastSearchPredecessorUrl(): string;
    onActionTagEvent(event: ActionTagEvent): boolean;
    protected abstract getComponentConfig(config: {}): CommonDocShowpageComponentConfig;
    protected configureComponent(config: {}): void;
    protected configureProcessingOfResolvedData(config: {}): void;
    protected abstract getConfiguredIndexableTypes(config: {}): string[];
    protected doProcessAfterResolvedData(config: {}): void;
    protected setMetaTags(config: {}, pdoc: PDocRecord, record: CommonDocRecord): void;
    protected setPageLayoutAndStyles(): void;
    protected processError(data: {
        record: ResolvedData<R>;
        pdoc: ResolvedData<PDocRecord>;
        baseSearchUrl: ResolvedData<string>;
    }): boolean;
}
