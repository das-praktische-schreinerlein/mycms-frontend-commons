import { ChangeDetectorRef, ViewContainerRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { ToastsManager } from 'ng2-toastr';
import { FormBuilder, FormGroup } from '@angular/forms';
import { UploadEvent } from 'ngx-file-drop';
import { IdCsvValidationRule, IdValidationRule } from '@dps/mycms-commons/dist/search-commons/model/forms/generic-validator.util';
import { CommonDocRecord } from '@dps/mycms-commons/dist/search-commons/model/records/cdoc-entity-record';
import { CommonDocSearchForm } from '@dps/mycms-commons/dist/search-commons/model/forms/cdoc-searchform';
import { CommonDocSearchResult } from '@dps/mycms-commons/dist/search-commons/model/container/cdoc-searchresult';
import { CommonDocDataService } from '@dps/mycms-commons/dist/search-commons/services/cdoc-data.service';
import { Layout, LayoutService } from '../../angular-commons/services/layout.service';
import { CommonRoutingService } from '../../angular-commons/services/common-routing.service';
import { ErrorResolver } from '../resolver/error.resolver';
import { CommonDocRoutingService } from '../services/cdoc-routing.service';
import { GenericSearchFormSearchFormConverter } from '@dps/mycms-commons/dist/search-commons/services/generic-searchform.converter';
import { PageUtils } from '../../angular-commons/services/page.utils';
import { GenericTrackingService } from '../../angular-commons/services/generic-tracking.service';
import { CommonDocAlbumService } from '../services/cdoc-album.service';
import { GenericAppService } from '@dps/mycms-commons/dist/commons/services/generic-app.service';
import { ResolvedData } from '../../angular-commons/resolver/resolver.utils';
import { AbstractPageComponent } from '../../frontend-pdoc-commons/components/pdoc-page.component';
import { PlatformService } from '../../angular-commons/services/platform.service';
import { PDocRecord } from '@dps/mycms-commons/dist/pdoc-commons/model/records/pdoc-record';
import { CommonEnvironment } from '../../frontend-pdoc-commons/common-environment';
export interface CommonDocAlbumpageComponentConfig {
    baseSearchUrl: string;
    baseSearchUrlDefault: string;
    baseAlbumUrl: string;
    autoPlayAllowed: boolean;
    maxAllowedItems: number;
}
export declare abstract class CommonDocAlbumpageComponent<R extends CommonDocRecord, F extends CommonDocSearchForm, S extends CommonDocSearchResult<R, F>, D extends CommonDocDataService<R, F, S>> extends AbstractPageComponent {
    protected route: ActivatedRoute;
    protected commonRoutingService: CommonRoutingService;
    protected errorResolver: ErrorResolver;
    protected cdocDataService: D;
    protected searchFormConverter: GenericSearchFormSearchFormConverter<F>;
    protected cdocRoutingService: CommonDocRoutingService;
    protected toastr: ToastsManager;
    protected pageUtils: PageUtils;
    protected cd: ChangeDetectorRef;
    protected trackingProvider: GenericTrackingService;
    fb: FormBuilder;
    protected cdocAlbumService: CommonDocAlbumService;
    protected appService: GenericAppService;
    protected platformService: PlatformService;
    protected layoutService: LayoutService;
    protected environment: CommonEnvironment;
    protected idCsvValidationRule: IdCsvValidationRule;
    idValidationRule: IdValidationRule;
    searchResult: S;
    listSearchResult: S;
    record: R;
    searchForm: F;
    listSearchForm: F;
    baseAlbumUrl: string;
    mode: string;
    layout: Layout;
    curRecordNr: number;
    albumKey: string;
    autoPlayAllowed: boolean;
    maxAllowedItems: number;
    pauseAutoPlay: boolean;
    editFormGroup: FormGroup;
    constructor(route: ActivatedRoute, commonRoutingService: CommonRoutingService, errorResolver: ErrorResolver, cdocDataService: D, searchFormConverter: GenericSearchFormSearchFormConverter<F>, cdocRoutingService: CommonDocRoutingService, toastr: ToastsManager, vcr: ViewContainerRef, pageUtils: PageUtils, cd: ChangeDetectorRef, trackingProvider: GenericTrackingService, fb: FormBuilder, cdocAlbumService: CommonDocAlbumService, appService: GenericAppService, platformService: PlatformService, layoutService: LayoutService, environment: CommonEnvironment);
    protected configureProcessing(): void;
    onCurRecordChange(page: number): boolean;
    onShowDoc(cdoc: R): boolean;
    onPageChange(page: number): boolean;
    onPerPageChange(perPage: number): boolean;
    onSortChange(sort: string): boolean;
    onLayoutChange(layout: Layout): boolean;
    onPlayerStarted(cdoc: R): void;
    onPlayerStopped(cdoc: R): void;
    submitSave(event: Event): boolean;
    doEdit(): boolean;
    doShow(): boolean;
    redictToSearch(): boolean;
    doSaveAsFile(): boolean;
    onFileSelected(event: any): void;
    onFileDropped(event: UploadEvent): void;
    onAlbumIntervalNext(): boolean;
    onAlbumIntervalStarted(): boolean;
    onAlbumReset(): boolean;
    protected abstract getComponentConfig(config: {}): CommonDocAlbumpageComponentConfig;
    protected configureComponent(config: {}): void;
    protected configureProcessingOfResolvedData(config: {}): void;
    protected processError(data: {
        searchForm: ResolvedData<F>;
        flgDoEdit: boolean;
        baseSearchUrl: ResolvedData<string>;
    }): boolean;
    protected setMetaTags(config: {}, pdoc: PDocRecord, record: CommonDocRecord): void;
    protected setPageLayoutAndStyles(): void;
    protected processFile(file: File): boolean;
    protected doSave(): boolean;
    protected doSearch(): void;
    protected loadRecord(nr: number): void;
    protected loadListResult(): void;
}
