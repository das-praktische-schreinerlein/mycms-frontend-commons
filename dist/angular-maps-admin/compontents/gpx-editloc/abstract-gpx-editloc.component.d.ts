import { ChangeDetectorRef, EventEmitter } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ToastrService } from 'ngx-toastr';
import { GenericAppService } from '@dps/mycms-commons/dist/commons/services/generic-app.service';
import { AbstractInlineComponent } from '../../../angular-commons/components/inline.component';
import { LatLng } from 'leaflet';
import { MapDocRecord } from '@dps/mycms-commons/dist/geo-commons/model/map-element.types';
export declare abstract class AbstractGpxEditLocComponent extends AbstractInlineComponent {
    fb: FormBuilder;
    protected toastr: ToastrService;
    protected cd: ChangeDetectorRef;
    protected appService: GenericAppService;
    private document;
    private geoLocationService;
    private geoLocMap;
    private lastGpx;
    private lastGeoLoc;
    private lastName;
    geoLocRecords: MapDocRecord[];
    name: string;
    type: string;
    subtype: string;
    gpxSrc: string;
    geoLoc: string;
    flgShowArea?: boolean;
    saveTrackSrc: EventEmitter<string>;
    saveGeoLoc: EventEmitter<string>;
    saveAdditionalFields: EventEmitter<{}>;
    editGpxLocFormGroup: FormGroup;
    constructor(fb: FormBuilder, toastr: ToastrService, cd: ChangeDetectorRef, appService: GenericAppService, document: any);
    doGeoLocationSearch(selector: any): boolean;
    onGeoLocMapCreated(map: L.Map): void;
    onGeoLocMapClicked(position: LatLng): void;
    createNewGeoLocArea(): boolean;
    updateGeoLocArea(): boolean;
    updateGeoLoc(): boolean;
    updateMap(values: {}): boolean;
    setValue(field: string, value: any): void;
    updateGeoData(): boolean;
    protected prepareSubmitValues(values: {}): void;
    protected updateFormComponents(): void;
    protected updateData(): void;
    protected setCurrentGpx(value: any): void;
    protected getCurrentGpx(): string;
    protected setCurrentGeoLoc(value: any): void;
    protected getCurrentGeoLoc(): string;
    protected setCurrentGeoLocAddress(value: any): void;
    protected getCurrentGeoLocAddress(): string;
    protected abstract createSanitized(values: {}): MapDocRecord;
}
